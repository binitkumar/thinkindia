= form_for GalleryPic.new, :html => { :multipart => true, :id => "fileupload", "data-sequential-uploads" => true } do |f|
  .row.fileupload-buttonbar
    .col-md-12.col-lg-12
      %span.btn.btn-success.fileinput-button
        %i.icon-plus.icon-white
        %span Add photos...
        = f.file_field :picture, id: 'upload-field', multiple: true
      %button.btn.btn-danger.delete{:type => "button"}
        %i.icon-trash.icon-white
        %span Delete
      %input.toggle{:type => "checkbox"}/
      %span.fileupload-loading

  / The global progress information
  .col-md-5.col-lg-5.fileupload-progress.fade
    .progress.progress-success.progress-striped.active{"aria-valuemax" => "100", "aria-valuemin" => "0", :role => "progressbar"}
      .bar{:style => "width:0%;"}
    .progress-extended Â 
  %table.table.table-striped{:role => "presentation"}
    %tbody.files

:javascript
  var fileUploadErrors = {
    maxFileSize: 'File is too big',
    minFileSize: 'File is too small',
    acceptFileTypes: 'Filetype not allowed',
    maxNumberOfFiles: 'Max number of files exceeded',
    uploadedBytes: 'Uploaded bytes exceed file size',
    emptyResult: 'Empty file upload result'
  };

/ The template to display files available for upload
%script#template-upload{:type => "text/x-tmpl"}
  {% for (var i=0, file; file=o.files[i]; i++) { %}
  <tr class="template-upload fade">
  <td>
  <span class="preview"></span>
  </td>
  <td>
  <p class="name">{%=file.name%}</p>
  <strong class="error text-danger"></strong>
  </td>
  <td>
  <p class="size">Processing...</p>
  <div class="progress progress-striped active" role="progressbar" aria-valuemin="0" aria-valuemax="100" aria-valuenow="0"><div class="progress-bar progress-bar-success" style="width:0%;"></div></div>
  </td>
  <td>
  {% if (!i && !o.options.autoUpload) { %}
  <button class="btn btn-primary start" disabled>
  <i class="glyphicon glyphicon-upload"></i>
  <span>Start</span>
  </button>
  {% } %}
  {% if (!i) { %}
  <button class="btn btn-warning cancel">
  <i class="glyphicon glyphicon-ban-circle"></i>
  <span>Cancel</span>
  </button>
  {% } %}
  </td>
  </tr>
  {% } %}

/ The template to display files available for download
%script#template-download{:type => "text/x-tmpl"}
  {% for (var i=0, file; file=o.files[i]; i++) { %}
  <tr class="template-download fade">
  <td>
  <span class="preview">
  {% if (file.thumbnail_url) { %}
  <a href="{%=file.url%}" title="{%=file.name%}" download="{%=file.name%}" data-gallery><img src="{%=file.thumbnail_url%}"></a>
  {% } %}
  </span>
  </td>
  <td>
  <p class="name">
  {% if (file.url) { %}
  <a href="{%=file.url%}" title="{%=file.name%}" download="{%=file.name%}" {%=file.thumbnailUrl?'data-gallery':''%}>{%=file.name%}</a>
  {% } else { %}
  <span>{%=file.name%}</span>
  {% } %}
  </p>
  {% if (file.error) { %}
  <div><span class="label label-danger">Error</span> {%=file.error%}</div>
  {% } %}
  </td>
  <td>
  <span class="size">{%=o.formatFileSize(file.size)%}</span>
  </td>
  <td>
  {% if (file.delete_url) { %}
  <button class="btn btn-danger delete" data-type="{%=file.delete_type%}" data-url="{%=file.delete_url%}">
  <i class="glyphicon glyphicon-trash"></i>
  <span>Delete</span>
  </button>
  <input type="checkbox" name="delete" value="1" class="toggle">
  {% } else { %}
  <button class="btn btn-warning cancel">
  <i class="glyphicon glyphicon-ban-circle"></i>
  <span>Cancel</span>
  </button>
  {% } %}
  </td>
  </tr>
  {% } %}

:plain
  <script charset = "utf-8" type = "text/javascript">
  $(function () {
    $('#fileupload').fileupload({
      url: "/gallery_pics?collection=#{params[:collection]}",
      dropZone: $(this),
      autoUpload: true,
      prependFiles: true
    });
  
    // Load existing files:
    $('#fileupload').addClass('fileupload-processing');
    $.ajax({
      // Uncomment the following to send cross-domain cookies:
      //xhrFields: {withCredentials: true},
      url: $('#fileupload').fileupload('option', 'url'),
      dataType: 'json',
      context: $('#fileupload')[0]
    }).always(function () {
      $(this).removeClass('fileupload-processing');
    }).done(function (result) {
      $(this).fileupload('option', 'done')
      //.call(this, $.Event('done'), {result: result});
    });
  });
  </script>
